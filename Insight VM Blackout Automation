import sys
import selenium
from selenium import webdriver
import requests
from bs4 import BeautifulSoup
from selenium.webdriver.common.action_chains import ActionChains
from selenium.webdriver.common.by import By
from selenium.webdriver.support.ui import WebDriverWait
from selenium.webdriver.support import expected_conditions
from selenium.webdriver.support.select import Select
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.chrome.options import Options
import time
import csv




chrome_options = Options()
chrome_options.add_argument("--start-fullscreen")
chrome_options.add_argument("--disable-infobars")

driver = webdriver.Chrome(chrome_options=chrome_options)
type(driver)

#Login into rapid7
url = "https://rapid7.mlbcsi.com:3780/login.jsp"
driver.get(url)
driver.implicitly_wait(20)

userElem = driver.find_element_by_id("nexposeccusername")
userElem.send_keys("usernmane")
passElem = driver.find_element_by_id("nexposeccpassword")
passElem.send_keys("password")
loginElem = driver.find_element_by_id("login_button").click()

def create_blackout(date, hour, minute, duration):
    #goes to site that comes before blackout because it wont let you directly jump to the blackout edit page
    time.sleep(4)
    assetsElem = driver.find_element_by_id("Assets").click()
    time.sleep(5)
    sitesElem = driver.find_element_by_id("totalSites")
    driver.execute_script("arguments[0].click();", sitesElem)
    testsite = "https://rapid7.mlbcsi.com:3780/site.jsp?siteid=" + "297"#edit site id to the correct one as a string
    driver.get(testsite)
    driver.implicitly_wait(30)
    managesiteElem = driver.find_element_by_id("manage_site_button").click()
    scheduleElem = driver.find_element_by_xpath("/html/body/div[3]/div[1]/div[2]/div[1]/ul/li[7]/div/label").click()
    blackoutElem = driver.find_element_by_xpath("/html/body/div[3]/div[1]/div[2]/div[2]/div/div/ul/li[4]/a[1]").click()

    #input info here
    dateElem = driver.find_element_by_xpath('/html/body/div[3]/div[1]/div[2]/div[2]/div/div/div/div/ng-include/div/form/fieldset/div[6]/div[1]/div[2]/input')
    driver.execute_script("arguments[0].removeAttribute('readonly')", dateElem)
    dateElem.clear()
    dateElem.send_keys(date)
    
    inputElement_HH = driver.find_element_by_id("scanBlackoutHour")
    inputElement_HH.send_keys(hour)
    inputElement_MM = driver.find_element_by_id("scanBlackoutMinute")
    inputElement_MM.send_keys(minute)

    am_or_pm = Select(driver.find_element_by_id("scanBlackoutTimeFrame"))
    am_or_pm.select_by_index(0)

    inputDuration_HH = driver.find_element_by_id("scanDurationHoursBlackout")
    inputDuration_HH.send_keys(duration)

    needed_click = driver.find_element_by_xpath('/html/body/div[3]/div[1]/div[2]/div[2]/div/div/div/div/ng-include/div/div[1]/img[2]').click()
    
    saveblackout = driver.find_element_by_id('scheduleBtnBlackout')
    driver.execute_script("arguments[0].click();", saveblackout)

    #Save the SCAN!!!!
    savescan = driver.find_element_by_id("btnScanConfigSave").click()

document= open(str(sys.argv[1]))
with document as f:
    reader = csv.reader(f)
    your_list = list(reader)
    print(your_list)
    for i in your_list:
        create_blackout(*i)

